name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: poetic-planet-449502-i0
  GAR_LOCATION: us-central1
  GAR_NAME: ghaction
  REGION: us-central1
  SERVICE: virtual-baseball-coach

  # Back-end service info
  BACKEND_SERVICE: virtual-baseball-coach

  # Front-end service info
  FRONTEND_SERVICE: virtual-baseball-coach-ui

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Checkout
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # 2. Authenticate to Google Cloud
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          # If you use a Workload Identity Provider, uncomment and replace:
          # workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          # service_account_email: 'my-service-account@my-project.iam.gserviceaccount.com'
          
          # OR using a JSON key stored in GitHub secrets:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          service_account: 'github-action@poetic-planet-449502-i0.iam.gserviceaccount.com'

      # 3. Configure Docker to push to Artifact Registry
      - name: 'Docker Auth'
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # 4. Build & Push Backend Image
      - name: 'Build & Push Backend Container'
        run: |
          BACKEND_IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.BACKEND_SERVICE }}:${{ github.sha }}"
          echo "Building and pushing backend image: ${BACKEND_IMAGE}"
          docker build -t "${BACKEND_IMAGE}" -f ./backend/Dockerfile ./backend
          docker push "${BACKEND_IMAGE}"

      # 5. Deploy Backend to Cloud Run
      - name: 'Deploy Backend to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.BACKEND_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.BACKEND_SERVICE }}:${{ github.sha }}'

      # 6. Build & Push Frontend Image
      - name: 'Build & Push Frontend Container'
        run: |
          FRONTEND_IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}"
          echo "Building and pushing frontend image: ${FRONTEND_IMAGE}"
          docker build -t "${FRONTEND_IMAGE}" -f ./frontend/Dockerfile ./frontend
          docker push "${FRONTEND_IMAGE}"

      # 7. Deploy Frontend to Cloud Run
      - name: 'Deploy Frontend to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.FRONTEND_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}'

      # 8. Show Deployed URLs (Optional)
      - name: 'Show Backend Service URL'
        run: |
          echo "Backend URL:"
          gcloud run services describe ${{ env.BACKEND_SERVICE }} --region=${{ env.REGION }} --format='value(status.url)'

      - name: 'Show Frontend Service URL'
        run: |
          echo "Frontend URL:"
          gcloud run services describe ${{ env.FRONTEND_SERVICE }} --region=${{ env.REGION }} --format='value(status.url)'
